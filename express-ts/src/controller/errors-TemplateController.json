[
  {
    "/home/thiago514/Documentos/QQtech/be-a-ba/express-ts/src/controller/TemplateController.ts": "1"
  },
  { "size": 3079, "mtime": 1699380388339, "results": "2", "hashOfConfig": "3" },
  {
    "filePath": "4",
    "messages": "5",
    "suppressedMessages": "6",
    "errorCount": 78,
    "fatalErrorCount": 0,
    "warningCount": 3,
    "fixableErrorCount": 68,
    "fixableWarningCount": 0,
    "source": null
  },
  "i6cbij",
  "/home/thiago514/Documentos/QQtech/be-a-ba/express-ts/src/controller/TemplateController.ts",
  [
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
    "30",
    "31",
    "32",
    "33",
    "34",
    "35",
    "36",
    "37",
    "38",
    "39",
    "40",
    "41",
    "42",
    "43",
    "44",
    "45",
    "46",
    "47",
    "48",
    "49",
    "50",
    "51",
    "52",
    "53",
    "54",
    "55",
    "56",
    "57",
    "58",
    "59",
    "60",
    "61",
    "62",
    "63",
    "64",
    "65",
    "66",
    "67",
    "68",
    "69",
    "70",
    "71",
    "72",
    "73",
    "74",
    "75",
    "76",
    "77",
    "78",
    "79",
    "80",
    "81",
    "82",
    "83",
    "84",
    "85",
    "86",
    "87"
  ],
  [],
  {
    "ruleId": "88",
    "severity": 2,
    "message": "89",
    "line": 4,
    "column": 3,
    "nodeType": "90",
    "messageId": "91",
    "endLine": 4,
    "endColumn": 23
  },
  {
    "ruleId": "92",
    "severity": 2,
    "message": "93",
    "line": 4,
    "column": 23,
    "nodeType": "90",
    "messageId": "94",
    "endLine": 4,
    "endColumn": 24,
    "fix": "95"
  },
  {
    "ruleId": "96",
    "severity": 2,
    "message": "97",
    "line": 5,
    "column": 11,
    "nodeType": "98",
    "messageId": "99",
    "endLine": 5,
    "endColumn": 21
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 5,
    "column": 52,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 5,
    "endColumn": 53,
    "fix": "104"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 6,
    "column": 35,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 6,
    "endColumn": 36,
    "fix": "106"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 8,
    "column": 26,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 8,
    "endColumn": 27,
    "fix": "107"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 9,
    "column": 38,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 9,
    "endColumn": 39,
    "fix": "108"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 10,
    "column": 55,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 10,
    "endColumn": 56,
    "fix": "109"
  },
  {
    "ruleId": "110",
    "severity": 1,
    "message": "111",
    "line": 13,
    "column": 8,
    "nodeType": "112",
    "messageId": "113",
    "endLine": 13,
    "endColumn": 29,
    "suggestions": "114"
  },
  {
    "ruleId": "110",
    "severity": 1,
    "message": "111",
    "line": 14,
    "column": 8,
    "nodeType": "112",
    "messageId": "113",
    "endLine": 14,
    "endColumn": 44,
    "suggestions": "115"
  },
  {
    "ruleId": "110",
    "severity": 1,
    "message": "111",
    "line": 15,
    "column": 8,
    "nodeType": "98",
    "messageId": "113",
    "endLine": 15,
    "endColumn": 25,
    "suggestions": "116"
  },
  {
    "ruleId": "117",
    "severity": 2,
    "message": "118",
    "line": 17,
    "column": 36,
    "nodeType": "119",
    "messageId": "120",
    "endLine": 17,
    "endColumn": 62,
    "fix": "121"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 17,
    "column": 65,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 17,
    "endColumn": 66,
    "fix": "122"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 18,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 18,
    "endColumn": 14,
    "fix": "124"
  },
  {
    "ruleId": "125",
    "severity": 2,
    "message": "126",
    "line": 22,
    "column": 44,
    "nodeType": "127",
    "messageId": "128",
    "endLine": 22,
    "endColumn": 46
  },
  {
    "ruleId": "117",
    "severity": 2,
    "message": "118",
    "line": 22,
    "column": 47,
    "nodeType": "119",
    "messageId": "120",
    "endLine": 22,
    "endColumn": 52,
    "fix": "129"
  },
  {
    "ruleId": "117",
    "severity": 2,
    "message": "118",
    "line": 25,
    "column": 36,
    "nodeType": "119",
    "messageId": "120",
    "endLine": 25,
    "endColumn": 74,
    "fix": "130"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 25,
    "column": 77,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 25,
    "endColumn": 78,
    "fix": "131"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 26,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 26,
    "endColumn": 14,
    "fix": "132"
  },
  {
    "ruleId": "133",
    "severity": 2,
    "message": "134",
    "line": 28,
    "column": 5,
    "nodeType": null,
    "messageId": "135",
    "endLine": 28,
    "endColumn": 8,
    "fix": "136"
  },
  {
    "ruleId": "137",
    "severity": 2,
    "message": "138",
    "line": 30,
    "column": 11,
    "nodeType": "98",
    "messageId": "139",
    "endLine": 30,
    "endColumn": 17,
    "fix": "140"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 30,
    "column": 40,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 30,
    "endColumn": 41,
    "fix": "141"
  },
  {
    "ruleId": "137",
    "severity": 2,
    "message": "142",
    "line": 33,
    "column": 13,
    "nodeType": "98",
    "messageId": "139",
    "endLine": 33,
    "endColumn": 18,
    "fix": "143"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 33,
    "column": 37,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 33,
    "endColumn": 38,
    "fix": "144"
  },
  {
    "ruleId": "137",
    "severity": 2,
    "message": "145",
    "line": 34,
    "column": 13,
    "nodeType": "98",
    "messageId": "139",
    "endLine": 34,
    "endColumn": 24,
    "fix": "146"
  },
  {
    "ruleId": "125",
    "severity": 2,
    "message": "126",
    "line": 35,
    "column": 25,
    "nodeType": "127",
    "messageId": "128",
    "endLine": 35,
    "endColumn": 27
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 35,
    "column": 38,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 35,
    "endColumn": 39,
    "fix": "147"
  },
  {
    "ruleId": "133",
    "severity": 2,
    "message": "148",
    "line": 38,
    "column": 9,
    "nodeType": null,
    "messageId": "135",
    "endLine": 38,
    "endColumn": 11,
    "fix": "149"
  },
  {
    "ruleId": "150",
    "severity": 2,
    "message": "151",
    "line": 38,
    "column": 35,
    "nodeType": "152",
    "messageId": "153",
    "endLine": 42,
    "endColumn": 10,
    "fix": "154"
  },
  {
    "ruleId": "117",
    "severity": 2,
    "message": "118",
    "line": 39,
    "column": 23,
    "nodeType": "119",
    "messageId": "120",
    "endLine": 39,
    "endColumn": 64,
    "fix": "155"
  },
  {
    "ruleId": "117",
    "severity": 2,
    "message": "118",
    "line": 40,
    "column": 23,
    "nodeType": "119",
    "messageId": "120",
    "endLine": 40,
    "endColumn": 63,
    "fix": "156"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 40,
    "column": 64,
    "nodeType": "157",
    "messageId": "103",
    "endLine": 40,
    "endColumn": 65,
    "fix": "158"
  },
  {
    "ruleId": "159",
    "severity": 2,
    "message": "160",
    "line": 40,
    "column": 65,
    "nodeType": "152",
    "messageId": "161",
    "endLine": 42,
    "endColumn": 9,
    "fix": "162"
  },
  {
    "ruleId": "133",
    "severity": 2,
    "message": "163",
    "line": 45,
    "column": 6,
    "nodeType": null,
    "messageId": "164",
    "endLine": 45,
    "endColumn": 11,
    "fix": "165"
  },
  {
    "ruleId": "133",
    "severity": 2,
    "message": "166",
    "line": 45,
    "column": 6,
    "nodeType": null,
    "messageId": "135",
    "endLine": 45,
    "endColumn": 11,
    "fix": "167"
  },
  {
    "ruleId": "150",
    "severity": 2,
    "message": "151",
    "line": 45,
    "column": 18,
    "nodeType": "152",
    "messageId": "153",
    "endLine": 48,
    "endColumn": 6,
    "fix": "168"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 46,
    "column": 42,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 46,
    "endColumn": 43,
    "fix": "169"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 47,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 47,
    "endColumn": 14,
    "fix": "170"
  },
  {
    "ruleId": "171",
    "severity": 2,
    "message": "172",
    "line": 51,
    "column": 7,
    "nodeType": "105",
    "messageId": "173",
    "endLine": 51,
    "endColumn": 67,
    "suggestions": "174"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 51,
    "column": 66,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 51,
    "endColumn": 67,
    "fix": "175"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 53,
    "column": 42,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 53,
    "endColumn": 43,
    "fix": "176"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 54,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 54,
    "endColumn": 14,
    "fix": "177"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 57,
    "column": 43,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 57,
    "endColumn": 44,
    "fix": "178"
  },
  {
    "ruleId": "88",
    "severity": 2,
    "message": "89",
    "line": 60,
    "column": 3,
    "nodeType": "90",
    "messageId": "91",
    "endLine": 60,
    "endColumn": 36
  },
  {
    "ruleId": "92",
    "severity": 2,
    "message": "93",
    "line": 60,
    "column": 36,
    "nodeType": "90",
    "messageId": "94",
    "endLine": 60,
    "endColumn": 37,
    "fix": "179"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 62,
    "column": 64,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 62,
    "endColumn": 65,
    "fix": "180"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 63,
    "column": 38,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 63,
    "endColumn": 39,
    "fix": "181"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 65,
    "column": 42,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 65,
    "endColumn": 43,
    "fix": "182"
  },
  {
    "ruleId": "183",
    "severity": 2,
    "message": "184",
    "line": 66,
    "column": 7,
    "nodeType": "123",
    "messageId": "185",
    "endLine": 66,
    "endColumn": 14,
    "fix": "186"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 66,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 66,
    "endColumn": 14,
    "fix": "187"
  },
  {
    "ruleId": "88",
    "severity": 2,
    "message": "89",
    "line": 70,
    "column": 3,
    "nodeType": "90",
    "messageId": "91",
    "endLine": 70,
    "endColumn": 38
  },
  {
    "ruleId": "92",
    "severity": 2,
    "message": "93",
    "line": 70,
    "column": 38,
    "nodeType": "90",
    "messageId": "94",
    "endLine": 70,
    "endColumn": 39,
    "fix": "188"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 71,
    "column": 44,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 71,
    "endColumn": 45,
    "fix": "189"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 73,
    "column": 65,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 73,
    "endColumn": 66,
    "fix": "190"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 74,
    "column": 37,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 74,
    "endColumn": 38,
    "fix": "191"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 76,
    "column": 42,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 76,
    "endColumn": 43,
    "fix": "192"
  },
  {
    "ruleId": "183",
    "severity": 2,
    "message": "184",
    "line": 77,
    "column": 7,
    "nodeType": "123",
    "messageId": "185",
    "endLine": 77,
    "endColumn": 14,
    "fix": "193"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 77,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 77,
    "endColumn": 14,
    "fix": "194"
  },
  {
    "ruleId": "88",
    "severity": 2,
    "message": "89",
    "line": 81,
    "column": 3,
    "nodeType": "90",
    "messageId": "91",
    "endLine": 81,
    "endColumn": 41
  },
  {
    "ruleId": "92",
    "severity": 2,
    "message": "93",
    "line": 81,
    "column": 41,
    "nodeType": "90",
    "messageId": "94",
    "endLine": 81,
    "endColumn": 42,
    "fix": "195"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 83,
    "column": 70,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 83,
    "endColumn": 71,
    "fix": "196"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 84,
    "column": 38,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 84,
    "endColumn": 39,
    "fix": "197"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 86,
    "column": 42,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 86,
    "endColumn": 43,
    "fix": "198"
  },
  {
    "ruleId": "183",
    "severity": 2,
    "message": "184",
    "line": 87,
    "column": 7,
    "nodeType": "123",
    "messageId": "185",
    "endLine": 87,
    "endColumn": 14,
    "fix": "199"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 87,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 87,
    "endColumn": 14,
    "fix": "200"
  },
  {
    "ruleId": "88",
    "severity": 2,
    "message": "89",
    "line": 91,
    "column": 3,
    "nodeType": "90",
    "messageId": "91",
    "endLine": 91,
    "endColumn": 40
  },
  {
    "ruleId": "92",
    "severity": 2,
    "message": "93",
    "line": 91,
    "column": 40,
    "nodeType": "90",
    "messageId": "94",
    "endLine": 91,
    "endColumn": 41,
    "fix": "201"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 93,
    "column": 73,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 93,
    "endColumn": 74,
    "fix": "202"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 94,
    "column": 38,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 94,
    "endColumn": 39,
    "fix": "203"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 96,
    "column": 42,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 96,
    "endColumn": 43,
    "fix": "204"
  },
  {
    "ruleId": "183",
    "severity": 2,
    "message": "184",
    "line": 97,
    "column": 7,
    "nodeType": "123",
    "messageId": "185",
    "endLine": 97,
    "endColumn": 14,
    "fix": "205"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 97,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 97,
    "endColumn": 14,
    "fix": "206"
  },
  {
    "ruleId": "88",
    "severity": 2,
    "message": "89",
    "line": 101,
    "column": 3,
    "nodeType": "90",
    "messageId": "91",
    "endLine": 101,
    "endColumn": 29
  },
  {
    "ruleId": "92",
    "severity": 2,
    "message": "93",
    "line": 101,
    "column": 29,
    "nodeType": "90",
    "messageId": "94",
    "endLine": 101,
    "endColumn": 30,
    "fix": "207"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 103,
    "column": 38,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 103,
    "endColumn": 39,
    "fix": "208"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 104,
    "column": 79,
    "nodeType": "102",
    "messageId": "103",
    "endLine": 104,
    "endColumn": 80,
    "fix": "209"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 105,
    "column": 37,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 105,
    "endColumn": 38,
    "fix": "210"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 107,
    "column": 42,
    "nodeType": "105",
    "messageId": "103",
    "endLine": 107,
    "endColumn": 43,
    "fix": "211"
  },
  {
    "ruleId": "183",
    "severity": 2,
    "message": "184",
    "line": 108,
    "column": 7,
    "nodeType": "123",
    "messageId": "185",
    "endLine": 108,
    "endColumn": 14,
    "fix": "212"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 108,
    "column": 13,
    "nodeType": "123",
    "messageId": "103",
    "endLine": 108,
    "endColumn": 14,
    "fix": "213"
  },
  {
    "ruleId": "100",
    "severity": 2,
    "message": "101",
    "line": 113,
    "column": 34,
    "nodeType": "214",
    "messageId": "103",
    "endLine": 113,
    "endColumn": 35,
    "fix": "215"
  },
  "@typescript-eslint/explicit-function-return-type",
  "Missing return type on function.",
  "FunctionExpression",
  "missingReturnType",
  "@typescript-eslint/space-before-function-paren",
  "Missing space before function parentheses.",
  "missing",
  { "range": "216", "text": "217" },
  "@typescript-eslint/naming-convention",
  "Variable name `id_usuario` must match one of the following formats: camelCase, PascalCase, UPPER_CASE",
  "Identifier",
  "doesNotMatchFormat",
  "@typescript-eslint/semi",
  "Extra semicolon.",
  "VariableDeclaration",
  "extraSemi",
  { "range": "218", "text": "219" },
  "ExpressionStatement",
  { "range": "220", "text": "221" },
  { "range": "222", "text": "223" },
  { "range": "224", "text": "225" },
  { "range": "226", "text": "227" },
  "@typescript-eslint/strict-boolean-expressions",
  "Unexpected any value in conditional. An explicit comparison or type cast is required.",
  "MemberExpression",
  "conditionErrorAny",
  ["228"],
  ["229"],
  ["230"],
  "@typescript-eslint/quotes",
  "Strings must use singlequote.",
  "Literal",
  "wrongQuotes",
  { "range": "231", "text": "232" },
  { "range": "233", "text": "234" },
  "ReturnStatement",
  { "range": "235", "text": "236" },
  "eqeqeq",
  "Expected '===' and instead saw '=='.",
  "BinaryExpression",
  "unexpected",
  { "range": "237", "text": "238" },
  { "range": "239", "text": "240" },
  { "range": "241", "text": "234" },
  { "range": "242", "text": "236" },
  "@typescript-eslint/keyword-spacing",
  "Expected space(s) after \"try\".",
  "expectedAfter",
  { "range": "243", "text": "217" },
  "prefer-const",
  "'tabela' is never reassigned. Use 'const' instead.",
  "useConst",
  { "range": "244", "text": "245" },
  { "range": "246", "text": "247" },
  "'campo' is never reassigned. Use 'const' instead.",
  { "range": "248", "text": "249" },
  { "range": "250", "text": "251" },
  "'verificacao' is never reassigned. Use 'const' instead.",
  { "range": "252", "text": "253" },
  { "range": "254", "text": "255" },
  "Expected space(s) after \"if\".",
  { "range": "256", "text": "217" },
  "@typescript-eslint/space-before-blocks",
  "Missing space before opening brace.",
  "BlockStatement",
  "missingSpace",
  { "range": "257", "text": "217" },
  { "range": "258", "text": "259" },
  { "range": "260", "text": "261" },
  "ThrowStatement",
  { "range": "262", "text": "263" },
  "padded-blocks",
  "Block must not be padded by blank lines.",
  "neverPadBlock",
  { "range": "264", "text": "265" },
  "Expected space(s) before \"catch\".",
  "expectedBefore",
  { "range": "266", "text": "217" },
  "Expected space(s) after \"catch\".",
  { "range": "267", "text": "217" },
  { "range": "268", "text": "217" },
  { "range": "269", "text": "234" },
  { "range": "270", "text": "236" },
  "@typescript-eslint/no-floating-promises",
  "Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.",
  "floatingVoid",
  ["271"],
  { "range": "272", "text": "273" },
  { "range": "274", "text": "234" },
  { "range": "275", "text": "236" },
  { "range": "276", "text": "277" },
  { "range": "278", "text": "217" },
  { "range": "279", "text": "280" },
  { "range": "281", "text": "273" },
  { "range": "282", "text": "234" },
  "no-useless-return",
  "Unnecessary return statement.",
  "unnecessaryReturn",
  { "range": "283", "text": "284" },
  { "range": "285", "text": "236" },
  { "range": "286", "text": "217" },
  { "range": "287", "text": "288" },
  { "range": "289", "text": "280" },
  { "range": "290", "text": "273" },
  { "range": "291", "text": "234" },
  { "range": "292", "text": "293" },
  { "range": "294", "text": "236" },
  { "range": "295", "text": "217" },
  { "range": "296", "text": "280" },
  { "range": "297", "text": "273" },
  { "range": "298", "text": "234" },
  { "range": "299", "text": "300" },
  { "range": "301", "text": "236" },
  { "range": "302", "text": "217" },
  { "range": "303", "text": "280" },
  { "range": "304", "text": "273" },
  { "range": "305", "text": "234" },
  { "range": "306", "text": "307" },
  { "range": "308", "text": "236" },
  { "range": "309", "text": "217" },
  { "range": "310", "text": "311" },
  { "range": "312", "text": "280" },
  { "range": "313", "text": "273" },
  { "range": "314", "text": "234" },
  { "range": "315", "text": "316" },
  { "range": "317", "text": "236" },
  "ExportDefaultDeclaration",
  { "range": "318", "text": "319" },
  [157, 157],
  " ",
  [220, 234],
  ")\n    console",
  [256, 271],
  ")\n\n    console",
  [284, 296],
  ")\n    const",
  [320, 335],
  "body\n    const",
  [373, 389],
  "tabelas\n\n    if",
  { "messageId": "320", "fix": "321", "desc": "322" },
  { "messageId": "320", "fix": "323", "desc": "322" },
  { "messageId": "320", "fix": "324", "desc": "322" },
  [539, 565],
  "'Requisição mal formatada'",
  [567, 582],
  ")\n      return",
  [576, 589],
  "return\n    }",
  [646, 651],
  "'CSV'",
  [733, 771],
  "'Arquivos CSV só podem ter uma tabela'",
  [773, 788],
  [782, 795],
  [803, 803],
  [868, 902],
  "const tabela = tabelasDoTemplate[i];",
  [900, 916],
  "]\n      console",
  [999, 1028],
  "const campo = tabela.campos[j];",
  [1026, 1040],
  "]\n        let",
  [1037, 1134],
  "const verificacao = tabela.campos.filter((e) => {\n          return e.nome == campo.nome;\n        })",
  [1118, 1133],
  "nome\n        }",
  [1185, 1185],
  [1209, 1209],
  [1233, 1274],
  "'tem mais de uma coluna com o mesmo nome'",
  [1298, 1338],
  "'Não pode haver campos com o mesmo nome'",
  [1338, 1351],
  ")\n\n        }",
  [1340, 1342],
  "\n",
  [1371, 1371],
  [1376, 1376],
  [1383, 1383],
  [1425, 1440],
  [1434, 1447],
  { "messageId": "325", "fix": "326", "desc": "327" },
  [1523, 1531],
  ")\n    }",
  [1588, 1603],
  [1597, 1610],
  [1653, 1659],
  ")\n  }",
  [1696, 1696],
  [1781, 1793],
  ")\n      res",
  [1820, 1828],
  [1885, 1900],
  [1696, 1911],
  "(req, res) {\n    try {\n      const templates = await TemplateService.listarTemplates();\n      res.status(200).json(templates);\n    } catch (error) {\n      res.status(400).json(error.message);\n      \n    }\n  }",
  [1894, 1907],
  [1950, 1950],
  [2005, 2015],
  ")\n    try",
  [2081, 2093],
  [2119, 2127],
  [2184, 2199],
  [1950, 2210],
  "(req, res) {\n    const id = idUsuario(req.headers.token);\n    try {\n      const template = await TemplateService.listarTemplates(id);\n      res.status(200).json(template);\n    } catch (error) {\n      res.status(500).json(error.message);\n      \n    }\n  }",
  [2193, 2206],
  [2252, 2252],
  [2343, 2355],
  [2382, 2390],
  [2447, 2462],
  [2252, 2473],
  "(req, res) {\n    try {\n      const templates = await TemplateService.listarTemplatesAtivos();\n      res.status(200).json(templates);\n    } catch (error) {\n      res.status(500).json(error.message);\n      \n    }\n  }",
  [2456, 2469],
  [2514, 2514],
  [2608, 2620],
  [2647, 2655],
  [2712, 2727],
  [2514, 2738],
  "(req, res) {\n    try {\n      const templates = await TemplateService.listarTemplatesPendentes();\n      res.status(200).json(templates);\n    } catch (error) {\n      res.status(500).json(error.message);\n      \n    }\n  }",
  [2721, 2734],
  [2768, 2768],
  [2824, 2841],
  "body\n      const",
  [2907, 2919],
  [2945, 2953],
  [3010, 3025],
  [2768, 3036],
  "(req, res) {\n    try {\n      const { id, status } = req.body;\n      const template = await TemplateService.alterarStatusTemplate(id, status);\n      res.status(200).json(template);\n    } catch (error) {\n      res.status(400).json(error.message);\n      \n    }\n  }",
  [3019, 3032],
  [3055, 3074],
  "TemplateController",
  "conditionFixCastBoolean",
  { "range": "328", "text": "329" },
  "Explicitly cast value to a boolean (`Boolean(value)`)",
  { "range": "330", "text": "331" },
  { "range": "332", "text": "333" },
  "floatingFixVoid",
  { "range": "334", "text": "335" },
  "Add void operator to ignore.",
  [399, 420],
  "(Boolean(templateCompleto.nome))",
  [431, 467],
  "(Boolean(templateCompleto.extencao_do_arquivo))",
  [478, 495],
  "(Boolean(tabelasDoTemplate))",
  [1465, 1465],
  "void "
]
