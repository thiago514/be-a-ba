[
  {
    "/home/thiago514/Documentos/QQtech/be-a-ba/express-ts/src/configs/db.ts": "1"
  },
  { "size": 605, "mtime": 1697717260247, "results": "2", "hashOfConfig": "3" },
  {
    "filePath": "4",
    "messages": "5",
    "suppressedMessages": "6",
    "errorCount": 26,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 24,
    "fixableWarningCount": 0,
    "source": null
  },
  "qxn7tu",
  "/home/thiago514/Documentos/QQtech/be-a-ba/express-ts/src/configs/db.ts",
  [
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
    "30",
    "31",
    "32"
  ],
  [],
  {
    "ruleId": "33",
    "severity": 2,
    "message": "34",
    "line": 0,
    "column": 1,
    "nodeType": null,
    "messageId": "35",
    "endLine": 0,
    "endColumn": 1
  },
  {
    "ruleId": "36",
    "severity": 2,
    "message": "34",
    "line": 0,
    "column": 1,
    "nodeType": null,
    "messageId": "35",
    "endLine": 0,
    "endColumn": 1
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 1,
    "column": 28,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 1,
    "endColumn": 37,
    "fix": "41"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 1,
    "column": 37,
    "nodeType": "44",
    "messageId": "45",
    "endLine": 1,
    "endColumn": 38,
    "fix": "46"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 2,
    "column": 22,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 2,
    "endColumn": 40,
    "fix": "47"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 2,
    "column": 40,
    "nodeType": "44",
    "messageId": "45",
    "endLine": 2,
    "endColumn": 41,
    "fix": "48"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 3,
    "column": 26,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 3,
    "endColumn": 48,
    "fix": "49"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 3,
    "column": 48,
    "nodeType": "44",
    "messageId": "45",
    "endLine": 3,
    "endColumn": 49,
    "fix": "50"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 4,
    "column": 24,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 4,
    "endColumn": 44,
    "fix": "51"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 4,
    "column": 44,
    "nodeType": "44",
    "messageId": "45",
    "endLine": 4,
    "endColumn": 45,
    "fix": "52"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 5,
    "column": 23,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 5,
    "endColumn": 42,
    "fix": "53"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 5,
    "column": 42,
    "nodeType": "44",
    "messageId": "45",
    "endLine": 5,
    "endColumn": 43,
    "fix": "54"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 6,
    "column": 25,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 6,
    "endColumn": 46,
    "fix": "55"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 6,
    "column": 46,
    "nodeType": "44",
    "messageId": "45",
    "endLine": 6,
    "endColumn": 47,
    "fix": "56"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 7,
    "column": 21,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 7,
    "endColumn": 38,
    "fix": "57"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 7,
    "column": 38,
    "nodeType": "44",
    "messageId": "45",
    "endLine": 7,
    "endColumn": 39,
    "fix": "58"
  },
  {
    "ruleId": "59",
    "severity": 2,
    "message": "60",
    "line": 9,
    "column": 1,
    "nodeType": "61",
    "messageId": "62",
    "endLine": 10,
    "endColumn": 1,
    "fix": "63"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 11,
    "column": 9,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 11,
    "endColumn": 19,
    "fix": "64"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 12,
    "column": 9,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 12,
    "endColumn": 20,
    "fix": "65"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 14,
    "column": 13,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 14,
    "endColumn": 23,
    "fix": "66"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 15,
    "column": 13,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 15,
    "endColumn": 19,
    "fix": "67"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 16,
    "column": 13,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 16,
    "endColumn": 21,
    "fix": "68"
  },
  {
    "ruleId": "37",
    "severity": 2,
    "message": "38",
    "line": 17,
    "column": 11,
    "nodeType": "39",
    "messageId": "40",
    "endLine": 17,
    "endColumn": 20,
    "fix": "69"
  },
  {
    "ruleId": "59",
    "severity": 2,
    "message": "60",
    "line": 23,
    "column": 1,
    "nodeType": "61",
    "messageId": "62",
    "endLine": 25,
    "endColumn": 1,
    "fix": "70"
  },
  {
    "ruleId": "42",
    "severity": 2,
    "message": "43",
    "line": 25,
    "column": 20,
    "nodeType": "71",
    "messageId": "45",
    "endLine": 25,
    "endColumn": 21,
    "fix": "72"
  },
  {
    "ruleId": "73",
    "severity": 2,
    "message": "74",
    "line": 25,
    "column": 21,
    "nodeType": "61",
    "messageId": "75",
    "fix": "76"
  },
  "@typescript-eslint/prefer-nullish-coalescing",
  "This rule requires the `strictNullChecks` compiler option to be turned on to function correctly.",
  "noStrictNullCheck",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/quotes",
  "Strings must use singlequote.",
  "Literal",
  "wrongQuotes",
  { "range": "77", "text": "78" },
  "@typescript-eslint/semi",
  "Extra semicolon.",
  "ImportDeclaration",
  "extraSemi",
  { "range": "79", "text": "80" },
  { "range": "81", "text": "82" },
  { "range": "83", "text": "84" },
  { "range": "85", "text": "86" },
  { "range": "87", "text": "88" },
  { "range": "89", "text": "90" },
  { "range": "91", "text": "92" },
  { "range": "93", "text": "94" },
  { "range": "95", "text": "96" },
  { "range": "97", "text": "98" },
  { "range": "99", "text": "100" },
  { "range": "101", "text": "102" },
  { "range": "103", "text": "104" },
  "no-multiple-empty-lines",
  "More than 1 blank line not allowed.",
  "Program",
  "consecutiveBlank",
  { "range": "105", "text": "106" },
  { "range": "107", "text": "108" },
  { "range": "109", "text": "110" },
  { "range": "111", "text": "108" },
  { "range": "112", "text": "113" },
  { "range": "114", "text": "115" },
  { "range": "116", "text": "117" },
  { "range": "118", "text": "106" },
  "ExportDefaultDeclaration",
  { "range": "119", "text": "120" },
  "eol-last",
  "Newline required at end of file but not found.",
  "missing",
  { "range": "121", "text": "122" },
  [27, 36],
  "'typeorm'",
  [27, 44],
  "\"typeorm\"\nimport",
  [59, 77],
  "'../entities/User'",
  [59, 85],
  "\"../entities/User\"\nimport",
  [104, 126],
  "'../entities/Template'",
  [104, 134],
  "\"../entities/Template\"\nimport",
  [151, 171],
  "'../entities/Tabela'",
  [151, 179],
  "\"../entities/Tabela\"\nimport",
  [195, 214],
  "'../entities/Campo'",
  [195, 222],
  "\"../entities/Campo\"\nimport",
  [240, 261],
  "'../entities/Arquivo'",
  [240, 269],
  "\"../entities/Arquivo\"\nimport",
  [283, 300],
  "'../entities/Log'",
  [283, 310],
  "\"../entities/Log\"\n\n\nexport",
  [302, 303],
  "",
  [349, 359],
  "'postgres'",
  [369, 380],
  "'localhost'",
  [408, 418],
  [432, 438],
  "'5149'",
  [452, 460],
  "'QQTech'",
  [472, 481],
  "'be-a-ba'",
  [582, 584],
  [600, 605],
  "conn",
  [605, 605],
  "\n"
]
